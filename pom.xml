<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.ondemand.pinnacle</groupId>
	<artifactId>pinnacle-data-insights</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>pinnacle-data-insights</name>
	<description>Webhook API to consume splunk logs </description>
	<packaging>pom</packaging>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>

		<twitter4j.version>4.0.7</twitter4j.version>

		<lombok.version>1.18.22</lombok.version>

		<spring-boot.version>2.7.5</spring-boot.version>
		<spring-kafka.version>2.9.2</spring-kafka.version>
		<spring-retry.version>1.3.4</spring-retry.version>
		<spring-cloud.version>3.1.4</spring-cloud.version>
		<spring-cloud-dependencies.version>2021.0.4</spring-cloud-dependencies.version>
<!--		<spring-cloud-starter-circuitbreaker-reactor-resilience4j.version>2.1.5</spring-cloud-starter-circuitbreaker-reactor-resilience4j.version>-->
<!--		<spring-cloud-starter-zipkin.version>2.2.8.RELEASE</spring-cloud-starter-zipkin.version>-->
<!--		<elastic.version>7.17.4</elastic.version>-->
		<springdoc-openapi-ui.version>1.6.12</springdoc-openapi-ui.version>
		<kafka-streams.version>3.3.1</kafka-streams.version>
		<kafka-clients.version>3.3.1</kafka-clients.version>
<!--		<kafka-avro-serializer.version>7.3.0</kafka-avro-serializer.version>-->
<!--		<kafka-streams-avro-serde.version>7.3.0</kafka-streams-avro-serde.version>-->
<!--		<avro.version>1.11.1</avro.version>-->
<!--		<micrometer-registry-prometheus.version>1.10.0</micrometer-registry-prometheus.version>-->
<!--		<logstash-logback-encoder.version>7.2</logstash-logback-encoder.version>-->
		<springfox.version>3.0.0</springfox.version>
		<annotations.version>23.0.0</annotations.version>

	</properties>

	<dependencies>
		<!--<dependency>
			<groupId>net.logstash.logback</groupId>
			<artifactId>logstash-logback-encoder</artifactId>
		</dependency>-->
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<!-- LOCAL -->
			<dependency>
				<groupId>com.ondemand.pinnacle</groupId>
				<artifactId>ingestion-svc</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ondemand.pinnacle</groupId>
				<artifactId>gateway-svc</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jetbrains</groupId>
				<artifactId>annotations</artifactId>
				<version>${annotations.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-boot-starter</artifactId>
				<version>${springfox.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud-dependencies.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-gateway</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
				<version>${spring-cloud-starter-circuitbreaker-reactor-resilience4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-config-server</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-config</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-loadbalancer</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-sleuth</artifactId>
				<version>${spring-cloud.version}</version>
			</dependency>

			<!--<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-starter-zipkin</artifactId>
				<version>${spring-cloud-starter-zipkin.version}</version>
			</dependency>-->

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${spring-kafka.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.retry</groupId>
				<artifactId>spring-retry</artifactId>
				<version>${spring-retry.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis-reactive</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-webflux</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<!--<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>${twitter4j.version}</version>
			</dependency>-->

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

		<!--	<dependency>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro</artifactId>
				<version>${avro.version}</version>
			</dependency>-->

			<!--<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elastic.version}</version>
			</dependency>-->

			<!--<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elastic.version}</version>
			</dependency>-->

			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc-openapi-ui.version}</version>
			</dependency>

			<!--<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-avro-serializer</artifactId>
				<version>${kafka-avro-serializer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>-->

			<dependency>
				<groupId>io.confluent</groupId>
				<artifactId>kafka-streams-avro-serde</artifactId>
				<version>${kafka-streams-avro-serde.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-streams</artifactId>
				<version>${kafka-streams.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
			</dependency>

			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer-registry-prometheus.version}</version>
			</dependency>

			<dependency>
				<groupId>net.logstash.logback</groupId>
				<artifactId>logstash-logback-encoder</artifactId>
				<version>${logstash-logback-encoder.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.3.2</version>
			</dependency>

		<!--	<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
			</dependency>-->

		<!--	<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>20220320</version>
			</dependency>-->

		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

</project>
